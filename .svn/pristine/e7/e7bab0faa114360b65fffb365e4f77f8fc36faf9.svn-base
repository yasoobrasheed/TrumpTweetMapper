
//App.js
import React from 'react';
// Import Components
import BarChart from './bar-chart';
import Dropdown from './dropdown';
import TweetDisplay from './tweet-display';
import SearchBar from './search-bar';
import Annotator from './annotator';
import Toggle from 'react-toggle';
// Import Data
import spData from '../../scripts/SP500.json';
import trumpData from '../../scripts/formattedTrump.json'
import vixData from '../../scripts/VIXCLS.json';
import nasdaqData from '../../scripts/NASDAQCOM.json';
import tnyrData from '../../scripts/DGS10.json';
import djiaData from '../../scripts/DJIA.json';
import crudeoilData from '../../scripts/DCOILWTICO.json';
import {PageHeader} from 'react-bootstrap';

var trumpTweets = {} 
trumpData.forEach((day) => {
  trumpTweets[new Date(day.date)] = day.tweets
});

function findSearchTweets(text) {
  var ret = []
  if(text != ''){
  trumpData.forEach((day) => {
    day.tweets.forEach((tweet) => {
      if(tweet.includes(text)) {
        ret = ret.concat([tweet])
      }
    })
  })}
  return ret
}

function returnPrice(data, date, index) {
  var ret = 0;
  var prev = 0;
  var temp = 0;
  data.forEach((datum) => {
    if(new Date(datum["DATE"]).valueOf() === date.valueOf()) {
      ret =  parseFloat(datum[index]);
      prev = temp;
    } else {
      prev = parseFloat(datum[index]);
    }
  })
  if(ret>prev) {
    return ret
  } else {
    return (-1 * ret)
  }
}

const testTweetData = ["Hi my name", "Where r u going", "second sex", "fake news"];
const dataSet = {"SP500":spData,
                 "CBOE Volatility Index": vixData,
                 "NASDAQ": nasdaqData,
                 "10-Yr Treasury Rate": tnyrData,
                 "DJIA": djiaData,
                 "Crude Oil": crudeoilData};


const startDate = new Date("2017-01-20");

class RootComponent extends React.Component {
  constructor(props){
    super(props)
    this.state = {curIndex: this.props.initIndex,
                  indexes: Object.keys(dataSet),
                  data: dataSet[this.props.initIndex],
                  curDate: startDate,
                  searchText: '',
                  zoom: false,
                  searchTweets: ''};
  }

  render() {
    console.log(this.state.zoom);
    const margin = {top:10, bottom:10, left:10, right:10};
    console.log('hi');
    return (
      <div className="flex center flex-column">
        <PageHeader className="header">Matching Donald Trump's Tweets to Stock Market Prices</PageHeader>
          <div className='rowC'>
            <TweetDisplay searchText={this.state.searchText} 
                          tweets={trumpTweets[this.state.curDate]}
                          searchTweets={findSearchTweets(this.state.searchText)}/>
            <div className="display">
            <div className="row1"> 
            <div className="selection-container">
            <h4 className="anno">Stock Market:</h4>            
              <Dropdown changeIndex={index => this.setState({curIndex: index, data: dataSet[index]})}
                        curIndex={this.state.curIndex} indexes={this.state.indexes}/>
              <Toggle
              defaultChecked={false}
              icons={false}
              onChange={(e) => this.setState({zoom:e.target.checked})}
              />
              </div>
              <SearchBar changeText={text => this.setState({searchText: text})} />
            </div>
            <div className="row2">
              <Annotator price = {returnPrice(dataSet[this.state.curIndex], this.state.curDate, this.state.curIndex)}
                         curDate = {this.state.curDate}
                         curIndex = {this.state.curIndex}/>
              </div>
            </div>
          </div>
          <BarChart margin={margin}
                  data={this.state.data}
                  width={2000} height={500}
                  index={this.state.curIndex}
                  searchText={this.state.searchText}
                  changeDate={date => this.setState({curDate: new Date(date), searchText: ''})}
                  curDate = {this.state.curDate}
                  zoom={this.state.zoom}/>
      </div>
    );
  }
}
RootComponent.displayName = 'RootComponent';
export default RootComponent;
